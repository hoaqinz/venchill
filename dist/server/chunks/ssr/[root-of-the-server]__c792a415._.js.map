{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/khumlong/code/phim/venchill/app/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n// Combine Tailwind classes\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Format movie duration\nexport function formatDuration(duration: string): string {\n  return duration || \"N/A\";\n}\n\n// Format episode text\nexport function formatEpisode(episode: string): string {\n  return episode || \"N/A\";\n}\n\n// Get image URL\nexport function getImageUrl(path: string): string {\n  if (!path) return \"/placeholder.jpg\";\n  if (path.startsWith(\"http\")) return path;\n\n  try {\n    return `https://img.ophim.live/uploads/movies/${path}`;\n  } catch (error) {\n    console.error(\"Error generating image URL:\", error);\n    return \"/placeholder.jpg\";\n  }\n}\n\n// Format movie title\nexport function formatMovieTitle(name: string, origin_name: string): string {\n  if (!name) return origin_name || \"Unknown\";\n  if (!origin_name) return name;\n  return `${name} (${origin_name})`;\n}\n\n// Truncate text\nexport function truncateText(text: string, length: number): string {\n  if (!text) return \"\";\n  if (text.length <= length) return text;\n  return text.slice(0, length) + \"...\";\n}\n\n// Parse HTML content\nexport function parseHtml(html: string): string {\n  if (!html) return \"\";\n  // Remove HTML tags\n  return html.replace(/<[^>]*>?/gm, '');\n}\n\n// Format year\nexport function formatYear(year: number): string {\n  return year ? year.toString() : \"N/A\";\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAGO,SAAS,eAAe,QAAgB;IAC7C,OAAO,YAAY;AACrB;AAGO,SAAS,cAAc,OAAe;IAC3C,OAAO,WAAW;AACpB;AAGO,SAAS,YAAY,IAAY;IACtC,IAAI,CAAC,MAAM,OAAO;IAClB,IAAI,KAAK,UAAU,CAAC,SAAS,OAAO;IAEpC,IAAI;QACF,OAAO,CAAC,sCAAsC,EAAE,MAAM;IACxD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF;AAGO,SAAS,iBAAiB,IAAY,EAAE,WAAmB;IAChE,IAAI,CAAC,MAAM,OAAO,eAAe;IACjC,IAAI,CAAC,aAAa,OAAO;IACzB,OAAO,GAAG,KAAK,EAAE,EAAE,YAAY,CAAC,CAAC;AACnC;AAGO,SAAS,aAAa,IAAY,EAAE,MAAc;IACvD,IAAI,CAAC,MAAM,OAAO;IAClB,IAAI,KAAK,MAAM,IAAI,QAAQ,OAAO;IAClC,OAAO,KAAK,KAAK,CAAC,GAAG,UAAU;AACjC;AAGO,SAAS,UAAU,IAAY;IACpC,IAAI,CAAC,MAAM,OAAO;IAClB,mBAAmB;IACnB,OAAO,KAAK,OAAO,CAAC,cAAc;AACpC;AAGO,SAAS,WAAW,IAAY;IACrC,OAAO,OAAO,KAAK,QAAQ,KAAK;AAClC","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/khumlong/code/phim/venchill/app/components/movie-player.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport Image from \"next/image\";\nimport dynamic from \"next/dynamic\";\nimport { useRouter } from \"next/navigation\";\nimport { getImageUrl } from \"@/app/lib/utils\";\n\n// Import React Player dynamically to avoid SSR issues\nconst ReactPlayer = dynamic(() => import(\"react-player/lazy\"), { ssr: false });\n\n// Import HLS.js dynamically\nconst Hls = dynamic(() => import(\"hls.js\"), { ssr: false });\n\ninterface MoviePlayerProps {\n  currentEpisode: any;\n  movie: any;\n  nextEpisode?: any;\n  prevEpisode?: any;\n}\n\n// Thời gian giới thiệu thông thường (90 giây)\nconst INTRO_DURATION = 90; // seconds\n\n// Thời gian còn lại để hiển thị nút tập tiếp theo (20 giây)\nconst NEXT_EPISODE_THRESHOLD = 20; // seconds\n\nexport default function MoviePlayer({ currentEpisode, movie, nextEpisode, prevEpisode }: MoviePlayerProps) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(45 * 60); // 45 minutes in seconds\n  const [volume, setVolume] = useState(100);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [showSkipIntro, setShowSkipIntro] = useState(false);\n  const [showNextEpisode, setShowNextEpisode] = useState(false);\n  const playerRef = useRef<HTMLDivElement>(null);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const router = useRouter();\n\n  // Format time in MM:SS\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Toggle play/pause\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    if (!playerRef.current) return;\n\n    if (!isFullscreen) {\n      if (playerRef.current.requestFullscreen) {\n        playerRef.current.requestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n    }\n  };\n\n  // Bỏ qua đoạn giới thiệu\n  const skipIntro = () => {\n    // Chuyển đến sau đoạn giới thiệu (90 giây)\n    setCurrentTime(INTRO_DURATION);\n    setProgress((INTRO_DURATION / duration) * 100);\n    setShowSkipIntro(false);\n\n    // Lưu vị trí mới\n    const watchKey = getWatchKey();\n    if (watchKey) {\n      localStorage.setItem(watchKey, INTRO_DURATION.toString());\n    }\n  };\n\n  // Chuyển đến tập tiếp theo\n  const goToNextEpisode = () => {\n    if (nextEpisode && movie) {\n      // Xóa trạng thái xem của tập hiện tại\n      const watchKey = getWatchKey();\n      if (watchKey) {\n        localStorage.removeItem(watchKey);\n      }\n\n      // Chuyển đến trang xem tập tiếp theo\n      router.push(`/xem-phim/${movie.slug}/${nextEpisode.slug}`);\n    }\n  };\n\n  // Khóa để lưu trạng thái xem\n  const getWatchKey = () => {\n    if (!movie || !currentEpisode) return null;\n    return `watch_${movie.slug}_${currentEpisode.slug}`;\n  };\n\n  // Lấy trạng thái xem đã lưu\n  useEffect(() => {\n    const watchKey = getWatchKey();\n    if (watchKey) {\n      const savedTime = localStorage.getItem(watchKey);\n      if (savedTime) {\n        const parsedTime = parseFloat(savedTime);\n        if (!isNaN(parsedTime) && parsedTime > 0) {\n          setCurrentTime(parsedTime);\n          setProgress((parsedTime / duration) * 100);\n          console.log(`Loaded saved position: ${formatTime(parsedTime)}`);\n        }\n      }\n    }\n  }, [movie?.slug, currentEpisode?.slug]);\n\n  // Lưu trạng thái xem mỗi 5 giây\n  useEffect(() => {\n    const saveInterval = setInterval(() => {\n      if (isPlaying && currentTime > 0) {\n        const watchKey = getWatchKey();\n        if (watchKey) {\n          localStorage.setItem(watchKey, currentTime.toString());\n          console.log(`Saved position: ${formatTime(currentTime)}`);\n        }\n      }\n    }, 5000);\n\n    return () => clearInterval(saveInterval);\n  }, [isPlaying, currentTime, movie?.slug, currentEpisode?.slug]);\n\n  // Update progress when playing\n  useEffect(() => {\n    if (isPlaying) {\n      intervalRef.current = setInterval(() => {\n        setCurrentTime((prevTime) => {\n          const newTime = prevTime + 1;\n          if (newTime >= duration) {\n            setIsPlaying(false);\n            clearInterval(intervalRef.current as NodeJS.Timeout);\n            return duration;\n          }\n          return newTime;\n        });\n        setProgress((prevProgress) => {\n          const newProgress = (currentTime / duration) * 100;\n          return newProgress > 100 ? 100 : newProgress;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isPlaying, currentTime, duration]);\n\n  // Listen for fullscreen change\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      setIsFullscreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  // Hiển thị nút bỏ qua giới thiệu khi đến đoạn giới thiệu\n  useEffect(() => {\n    // Hiển thị nút bỏ qua giới thiệu khi thời gian > 10s và < 85s\n    if (isPlaying && currentTime > 10 && currentTime < INTRO_DURATION - 5) {\n      setShowSkipIntro(true);\n    } else {\n      setShowSkipIntro(false);\n    }\n\n    // Hiển thị nút tập tiếp theo khi gần kết thúc video\n    if (nextEpisode && isPlaying && duration > 0 && (duration - currentTime) < NEXT_EPISODE_THRESHOLD) {\n      setShowNextEpisode(true);\n    } else {\n      setShowNextEpisode(false);\n    }\n  }, [currentTime, isPlaying, duration, nextEpisode]);\n\n  // Handle progress bar click\n  const handleProgressClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (!playerRef.current) return;\n\n    const progressBar = e.currentTarget;\n    const rect = progressBar.getBoundingClientRect();\n    const clickPosition = e.clientX - rect.left;\n    const progressBarWidth = rect.width;\n    const clickPercentage = (clickPosition / progressBarWidth) * 100;\n    const newTime = (clickPercentage / 100) * duration;\n\n    setCurrentTime(newTime);\n    setProgress(clickPercentage);\n  };\n\n  // Determine video URL and type\n  const isM3u8 = currentEpisode?.link_m3u8 && currentEpisode.link_m3u8.includes('.m3u8');\n\n  // Check if embed URL is an iframe HTML or direct URL\n  let isEmbed = false;\n  let embedUrl = '';\n\n  if (currentEpisode?.link_embed) {\n    if (currentEpisode.link_embed.includes('<iframe')) {\n      // Extract src from iframe HTML\n      const srcMatch = currentEpisode.link_embed.match(/src=['\"]([^'\"]+)['\"]/);\n      if (srcMatch && srcMatch[1]) {\n        isEmbed = true;\n        embedUrl = srcMatch[1];\n      }\n    } else {\n      // Direct URL\n      isEmbed = true;\n      embedUrl = currentEpisode.link_embed;\n    }\n  }\n\n  // Prioritize m3u8 over embed\n  const videoUrl = isM3u8 ? currentEpisode.link_m3u8 :\n                  isEmbed ? embedUrl :\n                  null;\n\n  console.log('Video URL:', videoUrl);\n  console.log('Is M3U8:', isM3u8);\n  console.log('Is Embed:', isEmbed);\n\n  return (\n    <div ref={playerRef} className=\"absolute inset-0 bg-black flex flex-col items-center justify-center\">\n      {/* Nút bỏ qua giới thiệu */}\n      {showSkipIntro && isPlaying && (\n        <button\n          onClick={skipIntro}\n          className=\"absolute bottom-24 right-8 z-50 bg-white/20 hover:bg-white/30 text-white px-4 py-2 rounded-md flex items-center gap-2 transition-all duration-300 backdrop-blur-sm\"\n        >\n          Bỏ qua giới thiệu\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n          </svg>\n        </button>\n      )}\n\n      {/* Nút tập tiếp theo */}\n      {showNextEpisode && nextEpisode && (\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-50 bg-black/70 p-6 rounded-lg text-center backdrop-blur-md w-80\">\n          <p className=\"text-white text-lg mb-2\">Tập tiếp theo sẽ phát trong {Math.floor(duration - currentTime)} giây</p>\n          <h3 className=\"text-white font-bold text-xl mb-4\">{nextEpisode.name}</h3>\n          <div className=\"flex gap-4 justify-center\">\n            <button\n              onClick={() => setShowNextEpisode(false)}\n              className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-md\"\n            >\n              Hủy\n            </button>\n            <button\n              onClick={goToNextEpisode}\n              className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md flex items-center gap-2\"\n            >\n              Xem ngay\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {!isPlaying ? (\n        // Thumbnail with play button\n        <div className=\"relative w-full h-full\">\n          <Image\n            src={getImageUrl(movie.poster_url || movie.thumb_url)}\n            alt={movie.name}\n            fill\n            className=\"object-cover opacity-30\"\n          />\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <button\n                onClick={togglePlay}\n                className=\"w-20 h-20 bg-red-600/80 rounded-full flex items-center justify-center mx-auto mb-4 cursor-pointer hover:bg-red-700 transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                </svg>\n              </button>\n              <p className=\"text-white text-lg font-medium\">\n                {movie.name} - Tập {currentEpisode.name}\n              </p>\n              <p className=\"text-gray-400 text-sm mt-2\">\n                Nhấn vào nút play để xem phim\n              </p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        // Real video player using ReactPlayer\n        <div className=\"relative w-full h-full bg-black\">\n          {videoUrl ? (\n            isEmbed ? (\n              // Use iframe for embed URLs\n              <div className=\"w-full h-full\">\n                <iframe\n                  src={videoUrl}\n                  width=\"100%\"\n                  height=\"100%\"\n                  frameBorder=\"0\"\n                  allowFullScreen\n                  title={`${movie.name} - Tập ${currentEpisode.name}`}\n                  style={{ position: 'absolute', top: 0, left: 0 }}\n                />\n              </div>\n            ) : (\n              // Use ReactPlayer for m3u8 and other URLs\n              <ReactPlayer\n                url={videoUrl}\n                width=\"100%\"\n                height=\"100%\"\n                playing={isPlaying}\n                controls={true}\n                config={{\n                  file: {\n                    forceHLS: isM3u8,\n                    forceVideo: true,\n                    hlsOptions: {\n                      enableWorker: true,\n                      lowLatencyMode: true,\n                      startLevel: 2,\n                      maxBufferLength: 30,        // Tăng buffer để giảm việc rebuffering\n                      maxMaxBufferLength: 60,     // Buffer tối đa\n                      backBufferLength: 30,       // Lưu buffer phía sau để quay lại nhanh hơn\n                      maxBufferSize: 60 * 1000000, // Kích thước buffer tối đa (60MB)\n                      maxBufferHole: 0.5,         // Lỗ hổng buffer tối đa\n                      liveSyncDuration: 3,        // Độ trễ cho phép khi xem trực tiếp\n                      manifestLoadingTimeOut: 10000, // Thời gian chờ tải manifest\n                      manifestLoadingMaxRetry: 4,  // Số lần thử lại tối đa\n                      startFragPrefetch: true,     // Tải trước fragment đầu tiên\n                      testBandwidth: true,         // Kiểm tra băng thông\n                    },\n                    attributes: {\n                      crossOrigin: \"anonymous\",    // Hỗ trợ CORS\n                      preload: \"auto\",             // Tự động tải trước\n                    },\n                  },\n                }}\n                onProgress={(state) => {\n                  setCurrentTime(state.playedSeconds);\n                  setProgress(state.played * 100);\n                }}\n                onDuration={(duration) => setDuration(duration)}\n                onPause={() => setIsPlaying(false)}\n                onPlay={() => setIsPlaying(true)}\n                onEnded={() => setIsPlaying(false)}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              />\n            )\n          ) : (\n            // Fallback if no video URL is available\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center\">\n                <p className=\"text-white text-xl font-bold mb-4\">\n                  Không tìm thấy nguồn phát\n                </p>\n                <p className=\"text-gray-400 text-sm\">\n                  Rất tiếc, không tìm thấy nguồn phát cho tập phim này.\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Chỉ hiển thị điều khiển tùy chỉnh khi không phải là embed */}\n      {!isEmbed && !isPlaying && (\n        <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 z-10\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={togglePlay}\n                className=\"text-white hover:text-red-500 transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </button>\n              <div className=\"text-white text-sm\">00:00 / {formatTime(duration)}</div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <button\n                onClick={toggleFullscreen}\n                className=\"text-white hover:text-red-500 transition-colors\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-2 w-full bg-gray-700 h-1 rounded-full overflow-hidden\">\n            <div className=\"bg-red-600 h-full rounded-full\" style={{ width: '0%' }}></div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}